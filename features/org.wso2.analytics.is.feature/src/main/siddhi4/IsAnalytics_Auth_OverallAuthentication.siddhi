@App:name("IsAnalytics_Auth_OverallAuthentication")
@App:description("Handle Event from IS and save data in a table for Overall Authentication")

-- Read data from OverallAuthenticationProcessedStream (Sinked from IsAnalytics_Auth_Common)
@source(type='inMemory', topic='IsAnalytics.Authentication.Common.OutputSinkFromOverallAuthenticationProcessedStream', @map(type='passThrough'))
define stream OverallAuthenticationProcessedStream (
    meta_tenantId int, 
    contextId string, 
    eventId string, 
    eventType string, 
    authenticationSuccess bool, 
    username string, 
    localUsername string, 
    userStoreDomain string, 
    tenantDomain string, 
    remoteIp string, 
    region string, 
    inboundAuthType string, 
    serviceProvider string, 
    rememberMeEnabled bool, 
    forceAuthEnabled bool, 
    passiveAuthEnabled bool, 
    rolesCommaSeparated string, 
    authenticationStep string, 
    identityProvider string, 
    authStepSuccess bool, 
    stepAuthenticator string, 
    isFirstLogin bool, 
    identityProviderType string, 
    _timestamp long
);

@store(type='rdbms', datasource='IS_DATA_DUMP_DB')
@primaryKey('meta_tenantId', 'contextId', 'eventId', 'eventType', 'region') 
define table OverallAuthenticationTable (
    meta_tenantId int, 
    contextId string, 
    eventId string, 
    eventType string, 
    authenticationSuccess bool, 
    username string, 
    localUsername string, 
    userStoreDomain string, 
    tenantDomain string, 
    remoteIp string, 
    region string, 
    inboundAuthType string, 
    serviceProvider string, 
    rememberMeEnabled bool, 
    forceAuthEnabled bool, 
    passiveAuthEnabled bool, 
    rolesCommaSeparated string, 
    authenticationStep string, 
    identityProvider string, 
    authStepSuccess bool, 
    stepAuthenticator string, 
    isFirstLogin bool, 
    identityProviderType string, 
    _timestamp long
);

from OverallAuthenticationProcessedStream
select 
    meta_tenantId, 
    contextId, 
    eventId, 
    eventType, 
    authenticationSuccess, 
    username, 
    localUsername, 
    userStoreDomain, 
    tenantDomain, 
    remoteIp, 
    region, 
    inboundAuthType, 
    serviceProvider, 
    rememberMeEnabled, 
    forceAuthEnabled, 
    passiveAuthEnabled, 
    rolesCommaSeparated, 
    authenticationStep, 
    identityProvider, 
    authStepSuccess, 
    stepAuthenticator, 
    isFirstLogin, 
    identityProviderType, 
    _timestamp
group by 
    meta_tenantId, 
    contextId, 
    eventId, 
    eventType, 
    region
update or insert into OverallAuthenticationTable
on 
    OverallAuthenticationTable.meta_tenantId==meta_tenantId 
    and OverallAuthenticationTable.contextId==contextId 
    and OverallAuthenticationTable.eventType==eventType 
    and OverallAuthenticationTable.region==region;